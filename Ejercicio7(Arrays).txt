Tenemos un programa para jugar a hundir la flota.

En el juego, hay tres jugadores.

Cada jugador tiene un tablero con casillas. Las columnas van desde la A hasta la J. Las filas van desde la 1 hasta la 10.

En el tablero se sitúan barcos, horizontales y verticales.

Los barcos pueden ser Submarino (longitud 2), Dragaminas (longitud 3), Fragata (longitud 4) y Portaaviones (longitud 5).

Los barcos además tienen pintura, que puede ser Roja, Azulada y Amarillenta.

Un barco queda situado en el tablero por la posición de la proa (columna y fila, en ese orden) y la orientación (horizontal o vertical).

Un barco horizontal va a la derecha desde la proa. Un barco vertical va hacia abajo desde la proa.

En la entrada estándar del programa tenemos un número indeterminado de barcos con los datos de cada barco en el orden en que se muestra en el ejemplo, seguido de la palabra Fin. Pero, tenemos esto para cada jugador.

Asi pues, la entrada que se muestra de ejemplo corresponde a uno de los tres jugadores.


Submarino
A
3
horizontal
Azulada
Fragata
B
4
vertical
Roja
Fin
Se pide un programa en pascal que lea la entrada y

Ignore los barcos mal definidos.
Dibuje un tablero en que se muestra la posición de cada barco, con la inicial del tipo de barco, para cada uno de los jugadores.
Escriba los barcos de ese jugador de menor a mayor longitud y cuántos hay de cada tipo.
Por ejemplo, con la entrada anterior para el jugador 1, el tablero mostrado para ese jugador debería ser exactamente como sigue (pero recuerda que hay dos jugadores mas).


A B C D E F G H I J
. . . . . . . . . . 1
. . . . . . . . . . 2
S S . . . . . . . . 3
. F . . . . . . . . 4
. F . . . . . . . . 5
. F . . . . . . . . 6
. F . . . . . . . . 7
. . . . . . . . . . 8
. . . . . . . . . . 9
. . . . . . . . . . 10


1 submarino
1 fragata

No se permite tener un tablero (una matriz). Para dibujar el tablero hay que buscar qué barco está en cada casilla del tablero, si es que está en alguna.

Ni que decir tiene que hay que utilizar tipos, procedimientos y funciones donde corresponda, y que hay que utilizar bucles y demás estructuras de control donde sea preciso.